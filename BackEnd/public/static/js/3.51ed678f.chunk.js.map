{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","assets/sound.mp3","components/Call/avatar.js","components/Call/outgoingCall.js","components/Call/incomingCall.js","app/routes/chatPanel/basic/index.js"],"names":["ReceivedMessageCell","_ref","conversation","user","react_default","a","createElement","className","src","thumb","alt","message","sentAt","SentMessageCell","require","name","Conversation","conversationData","selectedUser","map","index","type","Conversation_SentMessageCell","key","Conversation_ReceivedMessageCell","UserCell","chat","selectedSectionId","onSelectUser","id","concat","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","ChatUserList_UserCell","onlineUsers","filter","item","uid","_id","length","userImg","ContactList","contactList","ContactList_UserCell","module","exports","__webpack_require__","p","withStyles","avatar","margin","bigAvatar","width","height","props","classes","Grid_default","container","justify","alignItems","Avatar_default","DialogTitle","theme","root","borderBottom","palette","divider","padding","spacing","unit","backgroundColor","closeButton","Object","defineProperty","position","right","top","color","grey","title","children","onClose","DialogTitle_default","disableTypography","Typography_default","variant","IconButton_default","aria-label","Close_default","DialogContent","justifyContent","paddingLeft","paddingRight","MuiDialogContent","DialogActions","paddingBottom","MuiDialogActions","CustomizedDialogDemo","state","open","handleClickOpen","_this","setState","handleClose","_this$props","this","leaveRoom","Dialog_default","fullScreen","aria-labelledby","outgoingCall_DialogTitle","style","fontSize","undefined","outgoingCall_DialogContent","display","UserIcon","outgoingCall_DialogActions","Fab_default","CallEnd_default","React","Component","startCall","callingUser","callAttendLoader","incomingCall_DialogTitle","incomingCall_DialogContent","incomingCall_DialogActions","CircularProgress_default","marginRight","Call_default","ChatPanel","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","callType","roomName","trim","Date","showOutGoingLoader","connectOptions","previewTracks","tracks","Video","connect","token","then","roomJoined","error","alert","roomNameErr","detachTracks","forEach","track","detach","detachedElement","remove","detachParticipantTracks","participant","Array","from","values","room","setTimer","sendCall","showOutGoingScreen","startPlay","activeRoom","localMediaAvailable","hasJoinedRoom","showIncomingScreen","previewContainer","refs","localMedia","querySelector","attachParticipantTracks","localParticipant","participants","remoteMedia","on","endPlay","showCamera","console","log","identity","kind","attachTracks","stop","leaveType","disconnect","outGoingLeave","declineCall","outGoingDecline","interval","setInterval","timer","clearInterval","showTimerAlert","Communication","incomingCall","_this$state","onToggleDrawer","bind","assertThisInitialized","placeholderImage","CustomScrollbars","maxHeight","ChatUsers","email","userState","SearchBox","placeholder","value","searchChatUser","onChange","e","target","AppBar_default","Tabs_default","selectedTabIndex","handleChange","indicatorColor","textColor","minHeight","userNotFound","searchText","toLowerCase","includes","loader","drawerState","conversationList","find","data","setTimeout","showCommunication","IntlMessages","Button_default","event","handleChangeIndex","audio","Audio","sound","play","pause","currentTime","handleTimerAlert","users","recent","onLineUserArray","appendChild","attach","receCall","getAllStatus","allUsers","getAllUsers","getTokanStatus","_this$props$tokan","tokan","nextProps","incomingRoomName","callDeclinestatus","outGoingDeclineStatus","_this$state2","ref","Drawer_default","AppUsersInfo","outgoingCall","Call_incomingCall","react_bootstrap_sweetalert_default","marginTop","show","onConfirm","settings","userReducer","chatReducer"],"mappings":"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","file":"static/js/3.51ed678f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from \"react\";\r\nimport userImg from \"../../../../assets/images/user.png\";\r\nconst UserCell = ({ onSelectUser, selectedSectionId, user, onlineUsers }) => {\r\n  let getUser = onlineUsers.filter(item => item.uid === user._id);\r\n  let status = \"\";\r\n  if (getUser.length > 0) {\r\n    status = true;\r\n  } else {\r\n    status = false;\r\n  }\r\n  return (\r\n    <div\r\n      className={`chat-user-item ${\r\n        selectedSectionId === user._id ? \"active\" : \"\"\r\n      }`}\r\n      onClick={() => onSelectUser(user)}\r\n    >\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img\r\n              src={userImg}\r\n              className=\"rounded-circle size-40\"\r\n              alt=\"Abbott\"\r\n            />\r\n            {status && <span className={`chat-mode smallcal online`} />}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          {/* <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCell;\r\n","import React from \"react\";\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({\r\n  onSelectUser,\r\n  selectedSectionId,\r\n  contactList,\r\n  onlineUsers\r\n}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.length > 1 ? (\r\n        contactList.map((user, index) => (\r\n          <UserCell\r\n            key={index}\r\n            user={user}\r\n            selectedSectionId={selectedSectionId}\r\n            onSelectUser={onSelectUser}\r\n            onlineUsers={onlineUsers}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"p-5 text-center\">User not found</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","module.exports = __webpack_public_path__ + \"static/media/sound.3a588acb.mp3\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = {\n  avatar: {\n    margin: 10,\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 140,\n    height: 140,\n  },\n};\n\nfunction ImageAvatars(props) {\n  const { classes, src } = props;\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Avatar alt=\"Remy Sharp\" src={src} className={classes.bigAvatar} />\n    </Grid>\n  );\n}\n\nImageAvatars.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageAvatars);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"./avatar\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Call from \"@material-ui/icons/Call\";\nimport CallEnd from \"@material-ui/icons/CallEnd\";\nimport UserIcon from \"../../assets/images/user.png\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n    backgroundColor: \"grey\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing.unit,\n    top: theme.spacing.unit,\n    color: theme.palette.grey[500],\n    // backgroundColor:\"red\",\n    color: \"#ef5350\"\n  },\n  title: {\n    color: \"white\"\n  }\n}))(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"Close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    // marginTop:theme.spacing.unit*2,\n    justifyContent: \"center\",\n    paddingLeft: theme.spacing.unit * 14,\n    paddingRight: theme.spacing.unit * 14,\n    backgroundColor: \"grey\"\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    // borderTop: `1px solid ${theme.palette.divider}`,\n    justifyContent: \"center\",\n    margin: 0,\n    padding: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 3,\n    backgroundColor: \"grey\"\n  }\n}))(MuiDialogActions);\n\nclass CustomizedDialogDemo extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { selectedUser, leaveRoom } = this.props;\n    return (\n      <div>\n        <Dialog\n          fullScreen\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={true}\n        >\n          <DialogTitle id=\"customized-dialog-title\">\n            <Typography style={{ color: \"white\", fontSize: \"1.4em\" }}>\n              {selectedUser !== undefined && selectedUser.name}\n            </Typography>\n            <Typography color=\"secondary\" style={{ color: \"#fff\" }}>\n              calling\n            </Typography>\n          </DialogTitle>\n          <DialogContent style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Avatar src={UserIcon} />\n          </DialogContent>\n          <DialogActions>\n            <Fab style={{ color: \"red\" }} aria-label=\"Add\" onClick={()=>leaveRoom(\"outGoingLeave\")}>\n              <CallEnd />\n            </Fab>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default CustomizedDialogDemo;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"./avatar\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Call from \"@material-ui/icons/Call\";\nimport UserIcon from \"../../assets/images/user.png\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n    backgroundColor: \"grey\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing.unit,\n    top: theme.spacing.unit,\n    color: theme.palette.grey[500],\n    // backgroundColor:\"red\",\n    color: \"#ef5350\"\n  },\n  title: {\n    color: \"white\"\n  }\n}))(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"Close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    // marginTop:theme.spacing.unit*2,\n    justifyContent: \"center\",\n    paddingLeft: theme.spacing.unit * 14,\n    paddingRight: theme.spacing.unit * 14,\n    backgroundColor: \"grey\"\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    // borderTop: `1px solid ${theme.palette.divider}`,\n    justifyContent: \"center\",\n    margin: 0,\n    padding: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit * 3,\n    backgroundColor: \"grey\"\n  }\n}))(MuiDialogActions);\n\nclass CustomizedDialogDemo extends React.Component {\n  state = {\n    open: true\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { leaveRoom, startCall, callingUser, callAttendLoader } = this.props;\n    return (\n      <div>\n        <Dialog\n          fullScreen\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={true}\n        >\n          <DialogTitle id=\"customized-dialog-title\">\n            <Typography style={{ color: \"white\", fontSize: \"1.4em\" }}>\n              {callingUser.name}\n            </Typography>\n            <Typography style={{ color: \"#a5d6a7\" }} color=\"secondary\">\n              calling\n            </Typography>\n          </DialogTitle>\n          <DialogContent style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Avatar src={UserIcon} />\n          </DialogContent>\n          <DialogActions>\n            {callAttendLoader ? (\n              <CircularProgress style={{color: \"#fff\"}} />\n            ) : (\n              <Fab\n                style={{ color: \"green\", marginRight: \"20px\" }}\n                aria-label=\"Add\"\n                onClick={() => startCall(null, \"attndCall\")}\n              >\n                <Call />\n              </Fab>\n            )}\n            <Fab style={{ color: \"red\" }} aria-label=\"Add\" onClick={leaveRoom}>\n              <Call />\n            </Fab>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default CustomizedDialogDemo;\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { connect } from \"react-redux\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Moment from \"moment\";\r\nimport ChatUserList from \"components/chatPanel/ChatUserList\";\r\nimport conversationList from \"../data/conversationList\";\r\nimport Conversation from \"components/chatPanel/Conversation/index\";\r\nimport users from \"../data/chatUsers\";\r\nimport ContactList from \"components/chatPanel/ContactList/index\";\r\nimport SearchBox from \"components/SearchBox/index\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport { getAllUsers } from \"../../../../actions/user\";\r\nimport {\r\n  sendCall,\r\n  receCall,\r\n  declineCall,\r\n  outGoingLeave\r\n} from \"../../../../actions/chatAction\";\r\nimport Video from \"twilio-video\";\r\nimport placeholderImage from \"../../../../assets/images/placeholder.jpg\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport sound from \"../../../../assets/sound.mp3\";\r\n// dialog imports\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport CallEnd from \"@material-ui/icons/CallEnd\";\r\nimport OutGoingCall from \"../../../../components/Call/outgoingCall\";\r\nimport Call from \"@material-ui/icons/Call\";\r\nimport IncomingCallScreen from \"../../../../components/Call/incomingCall\";\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ChatPanel extends Component {\r\n  // call functions.....................................\r\n  startCall = (user, callType) => {\r\n    if (!this.state.roomName.trim()) {\r\n      this.setState({ roomNameErr: true, showOutGoingLoader: false });\r\n      return;\r\n    }\r\n    let startConversation = {\r\n      startTime: new Date(),\r\n      callingUser: this.props.user,\r\n      outGoingUser: user,\r\n      type: \"sent\"\r\n    }\r\n    \r\n\r\n    this.setState({\r\n      showOutGoingLoader: true,\r\n      callType\r\n    });\r\n    if (callType === \"attndCall\") {\r\n      this.setState({\r\n        callAttendLoader: true\r\n      });\r\n    }\r\n    // let roomName = \"newAsif\";\r\n    let roomName = \"\";\r\n    if (callType === \"outGoing\") {\r\n      roomName = this.props.user._id + user._id;\r\n      this.setState({\r\n        roomName: roomName\r\n      });\r\n    } else {\r\n      roomName = this.state.roomName;\r\n    }\r\n\r\n    let connectOptions = {\r\n      name: roomName\r\n    };\r\n\r\n    if (this.state.previewTracks) {\r\n      connectOptions.tracks = this.state.previewTracks;\r\n    }\r\n\r\n    // Join the Room with the token from the server and the\r\n\r\n    Video.connect(this.state.token, connectOptions).then(\r\n      this.roomJoined,\r\n\r\n      error => {\r\n        alert(\"Could not connect to Server: \" + error.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  attachTracks(tracks, container) {\r\n    tracks.forEach(track => {\r\n      container.appendChild(track.attach());\r\n    });\r\n  }\r\n\r\n  // Attaches a track to a specified DOM container\r\n  attachParticipantTracks(participant, container) {\r\n    var tracks = Array.from(participant.tracks.values());\r\n\r\n    this.attachTracks(tracks, container);\r\n  }\r\n\r\n  detachTracks = tracks => {\r\n    tracks.forEach(track => {\r\n      track.detach().forEach(detachedElement => {\r\n        detachedElement.remove();\r\n      });\r\n    });\r\n  };\r\n\r\n  detachParticipantTracks = participant => {\r\n    var tracks = Array.from(participant.tracks.values());\r\n    this.detachTracks(tracks);\r\n  };\r\n\r\n  roomJoined = room => {\r\n    if (this.state.callType === \"outGoing\") {\r\n      this.setTimer();\r\n      this.props.sendCall(\r\n        this.state.selectedUser,\r\n        this.state.roomName,\r\n        this.props.user\r\n      );\r\n      this.setState({\r\n        showOutGoingScreen: true\r\n      });\r\n    }\r\n    this.startPlay();\r\n    // this.togglePlay();\r\n\r\n    // Called when a participant joins a room\r\n    this.setState({\r\n      activeRoom: room,\r\n      localMediaAvailable: true,\r\n      hasJoinedRoom: true,\r\n      showOutGoingLoader: false,\r\n      showIncomingScreen: false\r\n    });\r\n\r\n    // Attach LocalParticipant's Tracks, if not already attached.\r\n    // if (!this.state.showOutGoingScreen) {\r\n    var previewContainer = this.refs.localMedia;\r\n\r\n    if (!previewContainer.querySelector(\"video\")) {\r\n      this.attachParticipantTracks(room.localParticipant, previewContainer);\r\n    }\r\n    // }\r\n\r\n    // Attach the Tracks of the Room's Participants.\r\n    room.participants.forEach(participant => {\r\n      var previewContainer = this.refs.remoteMedia;\r\n      this.attachParticipantTracks(participant, previewContainer);\r\n    });\r\n\r\n    // When a Participant joins the Room, log the event.\r\n    room.on(\"participantConnected\", participant => {\r\n      // this.togglePlay();\r\n      this.endPlay();\r\n      this.setState({\r\n        showIncomingScreen: false,\r\n        showOutGoingScreen: false,\r\n        showCamera: true,\r\n        callAttendLoader: false\r\n      });\r\n    });\r\n\r\n    // When a Participant adds a Track, attach it to the DOM.\r\n    room.on(\"trackAdded\", (track, participant) => {\r\n      this.setState({\r\n        showIncomingScreen: false,\r\n        showOutGoingScreen: false,\r\n        showCamera: true,\r\n        callAttendLoader: false\r\n      });\r\n      this.endPlay();\r\n\r\n      console.log(participant.identity + \" added track: \" + track.kind);\r\n      var previewContainer = this.refs.remoteMedia;\r\n      this.attachTracks([track], previewContainer);\r\n    });\r\n\r\n    // When a Participant removes a Track, detach it from the DOM.\r\n    room.on(\"trackRemoved\", (track, participant) => {\r\n      console.log(participant.identity + \" removed track: \" + track.kind);\r\n      this.detachTracks([track]);\r\n    });\r\n\r\n    // When a Participant leaves the Room, detach its Tracks.\r\n    room.on(\"participantDisconnected\", participant => {\r\n      console.log(\"Participant '\" + participant.identity + \"' left the room\");\r\n      this.detachParticipantTracks(participant);\r\n      this.leaveRoom();\r\n    });\r\n\r\n    // Once the LocalParticipant leaves the room, detach the Tracks\r\n    // of all Participants, including that of the LocalParticipant.\r\n    room.on(\"disconnected\", () => {\r\n      if (this.state.previewTracks) {\r\n        this.state.previewTracks.forEach(track => {\r\n          track.stop();\r\n        });\r\n      }\r\n      this.detachParticipantTracks(room.localParticipant);\r\n      room.participants.forEach(this.detachParticipantTracks);\r\n      // this.state.activeRoom = null;\r\n      this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\r\n    });\r\n  };\r\n\r\n  leaveRoom = leaveType => {\r\n    // this.togglePlay();\r\n    this.endPlay();\r\n    this.state.activeRoom.disconnect();\r\n    this.setState({\r\n      hasJoinedRoom: false,\r\n      localMediaAvailable: false,\r\n      showOutGoingScreen: false,\r\n      showIncomingScreen: false,\r\n      showCamera: false\r\n    });\r\n    if (leaveType === \"outGoingLeave\") {\r\n      this.props.outGoingLeave(this.state.selectedUser);\r\n    }\r\n  };\r\n  declineCall = () => {\r\n    this.props.declineCall(this.props.callingUser);\r\n    // this.togglePlay();\r\n    this.endPlay();\r\n    this.setState({\r\n      hasJoinedRoom: false,\r\n      localMediaAvailable: false,\r\n      showOutGoingScreen: false,\r\n      showIncomingScreen: false,\r\n      showCamera: false\r\n    });\r\n  };\r\n  outGoingDecline = () => {\r\n    this.endPlay();\r\n    this.setState({\r\n      hasJoinedRoom: false,\r\n      localMediaAvailable: false,\r\n      showOutGoingScreen: false,\r\n      showIncomingScreen: false,\r\n      showCamera: false\r\n    });\r\n  };\r\n  setTimer = () => {\r\n    let interval = setInterval(() => {\r\n      if (this.state.timer >= 50) {\r\n        clearInterval(interval);\r\n        this.leaveRoom(\"outGoingLeave\");\r\n        this.setState({\r\n          showTimerAlert: true\r\n        });\r\n      }\r\n      this.setState({\r\n        timer: this.state.timer + 1\r\n      });\r\n      console.log(this.state.timer);\r\n    }, 1000);\r\n  };\r\n\r\n  // end of call code......................................................\r\n\r\n  Communication = () => {\r\n    const { incomingCall } = this.props;\r\n    const {\r\n      message,\r\n      selectedUser,\r\n      conversation,\r\n      showOutGoingLoader\r\n    } = this.state;\r\n    const { conversationData } = conversation;\r\n\r\n    return (\r\n      <div className=\"chat-main\">\r\n        <div className=\"chat-main-header\">\r\n          <IconButton\r\n            className=\"d-block d-xl-none chat-btn\"\r\n            aria-label=\"Menu\"\r\n            onClick={this.onToggleDrawer.bind(this)}\r\n          >\r\n            <i className=\"zmdi zmdi-comment-text\" />\r\n          </IconButton>\r\n          <div className=\"chat-main-header-info\">\r\n            <div className=\"chat-avatar mr-2\">\r\n              <div className=\"chat-avatar-mode\">\r\n                <img\r\n                  // src={selectedUser.thumb}\r\n                  src={placeholderImage}\r\n                  className=\"rounded-circle size-60\"\r\n                  alt=\"\"\r\n                />\r\n\r\n                <span className={`chat-mode ${selectedUser.status}`} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chat-contact-name\">{selectedUser.name}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <CustomScrollbars\r\n          className=\"chat-list-scroll scrollbar\"\r\n          style={{\r\n            height:\r\n              this.props.width >= 1200\r\n                ? \"calc(100vh - 300px)\"\r\n                : \"calc(100vh - 255px)\"\r\n          }}\r\n        >\r\n          <Conversation\r\n            conversationData={conversationData}\r\n            selectedUser={selectedUser}\r\n          />\r\n        </CustomScrollbars>\r\n\r\n        <div className=\"chat-main-footer\">\r\n          <div\r\n            className=\"d-flex flex-row align-items-center\"\r\n            style={{ maxHeight: 51 }}\r\n          >\r\n            <div className=\"chat-sent\" style={{ margin: \"auto\" }}>\r\n              {showOutGoingLoader ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Fab\r\n                  style={{ color: \"green\", marginRight: \"20px\" }}\r\n                  aria-label=\"Add\"\r\n                  onClick={() => this.startCall(selectedUser, \"outGoing\")}\r\n                >\r\n                  <Call />\r\n                </Fab>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  ChatUsers = () => {\r\n    var name = this.props.user.name;\r\n    var email = this.props.user.email;\r\n    const { onlineUsers } = this.props;\r\n\r\n    return (\r\n      <div className=\"chat-sidenav-main\">\r\n        <div className=\"chat-sidenav-header\">\r\n          <div className=\"chat-user-hd\">\r\n            <div\r\n              className=\"chat-avatar mr-3\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  userState: 2\r\n                });\r\n              }}\r\n            >\r\n              <div className=\"chat-avatar-mode\">\r\n                <img\r\n                  id=\"user-avatar-button\"\r\n                  src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                  className=\"rounded-circle size-50\"\r\n                  alt=\"\"\r\n                />\r\n                <span className=\"chat-mode online\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n              <div className=\"module-title\">\r\n                <h5 className=\"mb-0\">{name}</h5>\r\n              </div>\r\n              <div className=\"module-user-detail\">\r\n                <span className=\"jr-link text-grey\">{email}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"search-wrapper\">\r\n            <SearchBox\r\n              placeholder=\"Search to start new chat\"\r\n              value={this.state.searchChatUser}\r\n              onChange={e => {\r\n                this.setState({\r\n                  searchChatUser: e.target.value\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-sidenav-content\">\r\n          <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n            {/* <Typography variant=\"subtitle1\" className=\"text-center\">\r\n            Contacts\r\n          </Typography> */}\r\n\r\n            <Tabs\r\n              className=\"chat-tabs\"\r\n              value={this.state.selectedTabIndex}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              style={{ minHeight: \"unset\" }}\r\n            >\r\n              {/* <Tab label={<IntlMessages id=\"chat.chatUser\" />} /> */}\r\n              {/* <Tab label={<IntlMessages id=\"chat.contacts\" />} /> */}\r\n\r\n              <Typography\r\n                style={{ width: \"-webkit-fill-available\", color: \"gray\" }}\r\n                variant=\"subtitle1\"\r\n                className=\"text-center\"\r\n              >\r\n                Contacts\r\n              </Typography>\r\n            </Tabs>\r\n          </AppBar>\r\n          {/* <SwipeableViews\r\n            index={this.state.selectedTabIndex}\r\n            onChangeIndex={this.handleChangeIndex}\r\n          > */}\r\n          {/* <CustomScrollbars\r\n              className=\"chat-sidenav-scroll scrollbar\"\r\n              style={{\r\n                height:\r\n                  this.props.width >= 1200\r\n                    ? \"calc(100vh - 328px)\"\r\n                    : \"calc(100vh - 202px)\"\r\n              }}\r\n            >\r\n              {this.state.chatUsers.length === 0 ? (\r\n                <div className=\"p-5\">{this.state.userNotFound}</div>\r\n              ) : (\r\n                <ChatUserList\r\n                  chatUsers={this.state.chatUsers}\r\n                  selectedSectionId={this.state.selectedSectionId}\r\n                  onSelectUser={this.onSelectUser.bind(this)}\r\n                />\r\n              )}\r\n            </CustomScrollbars> */}\r\n\r\n          <CustomScrollbars\r\n            className=\"chat-sidenav-scroll scrollbar\"\r\n            style={{\r\n              height:\r\n                this.props.width >= 1200\r\n                  ? \"calc(100vh - 328px)\"\r\n                  : \"calc(100vh - 202px)\"\r\n            }}\r\n          >\r\n            {this.state.contactList.length === 0 ? (\r\n              <div className=\"p-5\">{this.state.userNotFound}</div>\r\n            ) : (\r\n              <ContactList\r\n                contactList={this.state.contactList.filter(item => {\r\n                  var searchText = this.state.searchChatUser.toLowerCase();\r\n                  return item.name.toLowerCase().includes(searchText); // ||  item.email.toLowerCase().includes(searchText)\r\n                })}\r\n                selectedSectionId={this.state.selectedSectionId}\r\n                onSelectUser={this.onSelectUser.bind(this)}\r\n                onlineUsers={onlineUsers}\r\n              />\r\n            )}\r\n          </CustomScrollbars>\r\n          {/* </SwipeableViews> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSelectUser = user => {\r\n    this.setState({\r\n      loader: true,\r\n      selectedSectionId: user._id,\r\n      drawerState: this.props.drawerState,\r\n      selectedUser: user,\r\n      conversation: this.state.conversationList.find(\r\n        data => data.id === user._id\r\n      )\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ loader: false });\r\n    }, 1500);\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">\r\n          {this.state.selectedUser === null ? (\r\n            <div\r\n              className=\"loader-view\"\r\n              style={{ height: \"calc(100vh - 120px)\" }}\r\n            >\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\" />\r\n              <h1 className=\"text-muted\">\r\n                {<IntlMessages id=\"chat.selectUserChat\" />}\r\n              </h1>\r\n              <Button\r\n                className=\"d-block d-xl-none\"\r\n                color=\"primary\"\r\n                onClick={this.onToggleDrawer.bind(this)}\r\n              >\r\n                {<IntlMessages id=\"chat.selectContactChat\" />}\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            this.Communication()\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loader: false,\r\n      userNotFound: \"No user found\",\r\n      drawerState: false,\r\n      selectedSectionId: \"\",\r\n      selectedTabIndex: 0,\r\n      userState: 1,\r\n      searchChatUser: \"\",\r\n      contactList: [],\r\n      selectedUser: null,\r\n      message: \"\",\r\n      chatUsers: users.filter(user => user.recent),\r\n      conversationList: conversationList,\r\n      conversation: null,\r\n      // chat app\r\n      identity: null,\r\n      roomName: \"new room\",\r\n      roomNameErr: false, // Track error for room name TextField\r\n      previewTracks: null,\r\n      localMediaAvailable: false,\r\n      hasJoinedRoom: false,\r\n      activeRoom: \"\", // Track the current active room,\r\n      play: false,\r\n      showOutGoingScreen: false,\r\n      showOutGoingLoader: false,\r\n      callType: \"\",\r\n      showIncomingScreen: false,\r\n      showCamera: false,\r\n      callAttendLoader: false,\r\n      onLineUserArray: [],\r\n      timer: 0,\r\n      showTimerAlert: false\r\n    };\r\n  }\r\n  handleChange = (event, value) => {\r\n    this.setState({ selectedTabIndex: value });\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({ selectedTabIndex: index });\r\n  };\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.receCall();\r\n    if (this.props.getAllStatus === \"done\") {\r\n      this.setState({\r\n        contactList: this.props.allUsers\r\n      });\r\n    } else {\r\n      this.props.getAllUsers();\r\n    }\r\n\r\n    if (this.props.getTokanStatus === \"done\") {\r\n      const { identity, token } = this.props.tokan;\r\n      this.setState({ identity, token });\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      onLineUserArray: nextProps.onlineUsers\r\n    });\r\n\r\n    if (nextProps.getAllStatus === \"done\") {\r\n      this.setState({\r\n        contactList: this.props.allUsers\r\n      });\r\n    }\r\n    if (nextProps.incomingCall) {\r\n      // this.togglePlay();\r\n      this.startPlay();\r\n      this.setState({\r\n        roomName: nextProps.incomingRoomName,\r\n        showIncomingScreen: true\r\n      });\r\n    }\r\n    if (nextProps.callDeclinestatus === \"done\") {\r\n      this.leaveRoom();\r\n    }\r\n    if (nextProps.outGoingDeclineStatus === \"done\") {\r\n      this.outGoingDecline();\r\n    }\r\n  }\r\n\r\n  audio = new Audio(sound);\r\n\r\n  startPlay = () => {\r\n    this.setState({ play: true }, () => {\r\n      this.audio.play();\r\n    });\r\n  };\r\n  endPlay = () => {\r\n    this.setState({ play: false }, () => {\r\n      this.audio.pause();\r\n    });\r\n    this.audio.currentTime = 0;\r\n  };\r\n  handleTimerAlert = () => {\r\n    this.setState({\r\n      showTimerAlert: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { incomingCall, callingUser } = this.props;\r\n\r\n    const {\r\n      loader,\r\n      userState,\r\n      drawerState,\r\n      hasJoinedRoom,\r\n      showOutGoingScreen,\r\n      selectedUser,\r\n      showOutGoingLoader,\r\n      showIncomingScreen,\r\n      showCamera,\r\n      callAttendLoader,\r\n      showTimerAlert\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        {/* {showCamera ? ( */}\r\n        <div className=\"flex-item\">\r\n          <div ref=\"remoteMedia\" className=\"remoteVideo\">\r\n            <div ref=\"localMedia\" className=\"localVideo\" />\r\n            {showCamera && (\r\n              <Fab\r\n                color=\"secondary\"\r\n                aria-label=\"Add\"\r\n                className=\"endCall\"\r\n                onClick={this.leaveRoom}\r\n              >\r\n                <CallEnd />\r\n              </Fab>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {!showCamera && (\r\n          <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n            <div className=\"chat-module-box\">\r\n              <div className=\"d-block d-xl-none\">\r\n                <Drawer\r\n                  open={drawerState}\r\n                  onClose={this.onToggleDrawer.bind(this)}\r\n                >\r\n                  {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n                </Drawer>\r\n              </div>\r\n\r\n              <div className=\"chat-sidenav d-none d-xl-flex\">\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </div>\r\n              {loader ? (\r\n                <div\r\n                  className=\"loader-view w-100\"\r\n                  style={{ height: \"calc(100vh - 120px)\" }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              ) : (\r\n                this.showCommunication()\r\n              )}\r\n            </div>\r\n            {showOutGoingScreen && (\r\n              <OutGoingCall\r\n                selectedUser={selectedUser}\r\n                leaveRoom={this.leaveRoom}\r\n              />\r\n            )}\r\n            {showIncomingScreen && (\r\n              <IncomingCallScreen\r\n                leaveRoom={this.declineCall}\r\n                startCall={this.startCall}\r\n                callingUser={callingUser}\r\n                callAttendLoader={callAttendLoader}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {showTimerAlert && (\r\n          <SweetAlert\r\n            style={{ marginTop: \"0px\" }}\r\n            show={showTimerAlert}\r\n            title={this.state.selectedUser.name + \" is not available\"}\r\n            onConfirm={this.handleTimerAlert}\r\n          >\r\n            Call him later!\r\n          </SweetAlert>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    width: state.settings.width,\r\n    allUsers: state.userReducer.allUsers,\r\n    user: state.userReducer.user,\r\n    getAllStatus: state.userReducer.getAllStatus,\r\n    loader: state.userReducer.loader,\r\n    getTokanStatus: state.chatReducer.getTokanStatus,\r\n    tokan: state.chatReducer.tokan,\r\n    loader: state.chatReducer.loader,\r\n    incomingCall: state.chatReducer.incomingCall,\r\n    incomingRoomName: state.chatReducer.incomingRoomName,\r\n    callingUser: state.chatReducer.callingUser,\r\n    callDeclinestatus: state.chatReducer.callDeclinestatus,\r\n    outGoingDeclineStatus: state.chatReducer.outGoingDeclineStatus,\r\n    onlineUsers: state.userReducer.onlineUsers\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getAllUsers, sendCall, receCall, declineCall, outGoingLeave }\r\n)(ChatPanel);\r\n"],"sourceRoot":""}