{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","app/routes/chatPanel/redux/index.js"],"names":["ReceivedMessageCell","_ref","conversation","user","react_default","a","createElement","className","src","thumb","alt","message","sentAt","SentMessageCell","require","name","Conversation","conversationData","selectedUser","map","index","type","Conversation_SentMessageCell","key","Conversation_ReceivedMessageCell","UserCell","chat","selectedSectionId","onSelectUser","id","concat","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","ChatUserList_UserCell","_id","userImg","ContactList","contactList","ContactList_UserCell","ChatPanelWithRedux","_this","Object","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","filterContacts","userName","props","filterUsers","_handleKeyPress","e","submitComment","setTimeout","hideLoader","updateMessageValue","evt","target","value","Communication","_this$props","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15___default","aria-label","onChatToggleDrawer","bind","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_23__","style","height","width","components_chatPanel_Conversation_index__WEBPACK_IMPORTED_MODULE_18__","maxHeight","onKeyUp","onChange","placeholder","AppUsersInfo","setState","userState","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_16___default","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","userInfoState","components_SearchBox__WEBPACK_IMPORTED_MODULE_20__","updateSearchChatUser","searchChatUser","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_10___default","position","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_11___default","state","selectedTabIndex","handleChange","indicatorColor","textColor","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_12___default","label","util_IntlMessages__WEBPACK_IMPORTED_MODULE_21__","react_swipeable_views__WEBPACK_IMPORTED_MODULE_9___default","onChangeIndex","handleChangeIndex","length","userNotFound","components_chatPanel_ChatUserList_index__WEBPACK_IMPORTED_MODULE_17__","components_chatPanel_ContactList_index__WEBPACK_IMPORTED_MODULE_19__","event","showCommunication","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","color","fetchChatUser","fetchChatUserConversation","_this$props2","loader","drawerState","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_13___default","open","onClose","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14___default","Component","connect","chatData","settings","conversationList"],"mappings":"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","file":"static/js/4.bbf4b3b2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from 'react';\r\nimport userImg from '../../../../assets/images/user.png'\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user._id ? 'active' : ''}`} \r\n    onClick={()=>onSelectUser(user)}\r\n    >\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={userImg} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            {/* <span className={`chat-mode smallcal ${user.status}`}/> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          {/* <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport ChatUserList from 'components/chatPanel/ChatUserList/index';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  hideLoader,\r\n  onChatToggleDrawer,\r\n  onSelectUser,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  userInfoState\r\n} from 'actions/Chat'\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanelWithRedux extends Component {\r\n  filterContacts = (userName) => {\r\n    this.props.filterContacts(userName);\r\n  };\r\n  filterUsers = (userName) => {\r\n    this.props.filterUsers(userName);\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  onSelectUser = (user) => {\r\n    this.props.onSelectUser(user);\r\n\r\n    setTimeout(() => {\r\n      this.props.hideLoader();\r\n    }, 1500);\r\n  };\r\n\r\n\r\n  submitComment = () => {\r\n    if (this.props.message !== '') {\r\n      this.props.submitComment();\r\n    }\r\n  };\r\n\r\n  updateMessageValue = (evt) => {\r\n    this.props.updateMessageValue(evt.target.value);\r\n\r\n  };\r\n\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.props;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onChatToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 255px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2 text-white\">Robert Johnson</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.props.userInfoState(2);\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.props.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            fullWidth\r\n          >\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.props.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.props.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.props.chatUsers}\r\n                            selectedSectionId={this.props.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.props.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.props.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.props.contactList}\r\n                             selectedSectionId={this.props.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.props.selectedUser === null ?\r\n            <div className=\"loader-view\">\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\"> {<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onChatToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedTabIndex: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchChatUser();\r\n    this.props.fetchChatUserConversation()\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.props.updateSearchChatUser(evt.target.value);\r\n    this.props.filterContacts(evt.target.value);\r\n    this.props.filterUsers(evt.target.value);\r\n  }\r\n\r\n  onChatToggleDrawer() {\r\n    this.props.onChatToggleDrawer();\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.props;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onChatToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({chatData, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  } = chatData;\r\n  return {\r\n    width,\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  onSelectUser,\r\n  hideLoader,\r\n  userInfoState,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  onChatToggleDrawer\r\n})(ChatPanelWithRedux);"],"sourceRoot":""}