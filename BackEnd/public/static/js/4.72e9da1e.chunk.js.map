{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","app/routes/chatPanel/redux/index.js"],"names":["ReceivedMessageCell","_ref","conversation","user","react_default","a","createElement","className","src","thumb","alt","message","sentAt","SentMessageCell","require","name","Conversation","conversationData","selectedUser","map","index","type","Conversation_SentMessageCell","key","Conversation_ReceivedMessageCell","UserCell","chat","selectedSectionId","onSelectUser","id","concat","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","ChatUserList_UserCell","onlineUsers","filter","item","uid","_id","length","userImg","ContactList","contactList","ContactList_UserCell","ChatPanelWithRedux","_this","Object","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","filterContacts","userName","props","filterUsers","_handleKeyPress","e","submitComment","setTimeout","hideLoader","updateMessageValue","evt","target","value","Communication","_this$props","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15___default","aria-label","onChatToggleDrawer","bind","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_23__","style","height","width","components_chatPanel_Conversation_index__WEBPACK_IMPORTED_MODULE_18__","maxHeight","onKeyUp","onChange","placeholder","AppUsersInfo","setState","userState","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_16___default","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","userInfoState","components_SearchBox__WEBPACK_IMPORTED_MODULE_20__","updateSearchChatUser","searchChatUser","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_10___default","position","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_11___default","state","selectedTabIndex","handleChange","indicatorColor","textColor","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_12___default","label","util_IntlMessages__WEBPACK_IMPORTED_MODULE_21__","react_swipeable_views__WEBPACK_IMPORTED_MODULE_9___default","onChangeIndex","handleChangeIndex","userNotFound","components_chatPanel_ChatUserList_index__WEBPACK_IMPORTED_MODULE_17__","components_chatPanel_ContactList_index__WEBPACK_IMPORTED_MODULE_19__","event","showCommunication","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","color","fetchChatUser","fetchChatUserConversation","_this$props2","loader","drawerState","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_13___default","open","onClose","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14___default","Component","connect","chatData","settings","conversationList"],"mappings":"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","file":"static/js/4.72e9da1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from \"react\";\r\nimport userImg from \"../../../../assets/images/user.png\";\r\nconst UserCell = ({ onSelectUser, selectedSectionId, user, onlineUsers }) => {\r\n  let getUser = onlineUsers.filter(item => item.uid === user._id);\r\n  let status = \"\";\r\n  if (getUser.length > 0) {\r\n    status = true;\r\n  } else {\r\n    status = false;\r\n  }\r\n  return (\r\n    <div\r\n      className={`chat-user-item ${\r\n        selectedSectionId === user._id ? \"active\" : \"\"\r\n      }`}\r\n      onClick={() => onSelectUser(user)}\r\n    >\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img\r\n              src={userImg}\r\n              className=\"rounded-circle size-40\"\r\n              alt=\"Abbott\"\r\n            />\r\n            {status && <span className={`chat-mode smallcal online`} />}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          {/* <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCell;\r\n","import React from \"react\";\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({\r\n  onSelectUser,\r\n  selectedSectionId,\r\n  contactList,\r\n  onlineUsers\r\n}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.length > 1 ? (\r\n        contactList.map((user, index) => (\r\n          <UserCell\r\n            key={index}\r\n            user={user}\r\n            selectedSectionId={selectedSectionId}\r\n            onSelectUser={onSelectUser}\r\n            onlineUsers={onlineUsers}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"p-5 text-center\">User not found</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport ChatUserList from 'components/chatPanel/ChatUserList/index';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  hideLoader,\r\n  onChatToggleDrawer,\r\n  onSelectUser,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  userInfoState\r\n} from 'actions/Chat'\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanelWithRedux extends Component {\r\n  filterContacts = (userName) => {\r\n    this.props.filterContacts(userName);\r\n  };\r\n  filterUsers = (userName) => {\r\n    this.props.filterUsers(userName);\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  onSelectUser = (user) => {\r\n    this.props.onSelectUser(user);\r\n\r\n    setTimeout(() => {\r\n      this.props.hideLoader();\r\n    }, 1500);\r\n  };\r\n\r\n\r\n  submitComment = () => {\r\n    if (this.props.message !== '') {\r\n      this.props.submitComment();\r\n    }\r\n  };\r\n\r\n  updateMessageValue = (evt) => {\r\n    this.props.updateMessageValue(evt.target.value);\r\n\r\n  };\r\n\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.props;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onChatToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 255px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2 text-white\">Robert Johnson</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.props.userInfoState(2);\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.props.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            fullWidth\r\n          >\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.props.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.props.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.props.chatUsers}\r\n                            selectedSectionId={this.props.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.props.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.props.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.props.contactList}\r\n                             selectedSectionId={this.props.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.props.selectedUser === null ?\r\n            <div className=\"loader-view\">\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\"> {<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onChatToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedTabIndex: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchChatUser();\r\n    this.props.fetchChatUserConversation()\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.props.updateSearchChatUser(evt.target.value);\r\n    this.props.filterContacts(evt.target.value);\r\n    this.props.filterUsers(evt.target.value);\r\n  }\r\n\r\n  onChatToggleDrawer() {\r\n    this.props.onChatToggleDrawer();\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.props;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onChatToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({chatData, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  } = chatData;\r\n  return {\r\n    width,\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  onSelectUser,\r\n  hideLoader,\r\n  userInfoState,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  onChatToggleDrawer\r\n})(ChatPanelWithRedux);"],"sourceRoot":""}