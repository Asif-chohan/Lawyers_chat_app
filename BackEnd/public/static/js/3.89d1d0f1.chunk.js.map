{"version":3,"sources":["components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","app/routes/chatPanel/basic/index.js"],"names":["ReceivedMessageCell","_ref","conversation","user","react_default","a","createElement","className","src","thumb","alt","message","sentAt","SentMessageCell","require","name","Conversation","conversationData","selectedUser","map","index","type","Conversation_SentMessageCell","key","Conversation_ReceivedMessageCell","UserCell","chat","selectedSectionId","onSelectUser","id","concat","onClick","status","lastMessage","substring","lastMessageTime","unreadMessage","ChatUserList","chatUsers","ChatUserList_UserCell","_id","userImg","ContactList","contactList","ContactList_UserCell","ChatPanel","_this","Object","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","filterContact","userName","users","filter","recent","toLowerCase","indexOf","filterUsers","startCall","state","roomName","trim","console","log","connectOptions","previewTracks","tracks","Video","connect","token","then","roomJoined","props","sendCall","error","alert","setState","roomNameErr","receCall","attachTracks","container","forEach","track","appendChild","attach","attachParticipantTracks","participant","Array","from","values","detachTracks","detach","detachedElement","remove","detachParticipantTracks","room","identity","activeRoom","localMediaAvailable","hasJoinedRoom","previewContainer","refs","localMedia","querySelector","localParticipant","participants","remoteMedia","on","kind","stop","leaveRoom","disconnect","Communication","incomingCall","_this$state","showLocalTrack","react__WEBPACK_IMPORTED_MODULE_8___default","ref","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_17___default","aria-label","onToggleDrawer","bind","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_27__","style","height","width","maxHeight","onKeyUp","_handleKeyPress","onChange","updateMessageValue","value","placeholder","AppUsersInfo","userState","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_18___default","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","components_SearchBox_index__WEBPACK_IMPORTED_MODULE_25__","updateSearchChatUser","searchChatUser","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_13___default","position","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_14___default","selectedTabIndex","handleChange","indicatorColor","textColor","variant","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_15___default","label","util_IntlMessages__WEBPACK_IMPORTED_MODULE_26__","react_swipeable_views__WEBPACK_IMPORTED_MODULE_12___default","onChangeIndex","handleChangeIndex","length","userNotFound","components_chatPanel_ChatUserList__WEBPACK_IMPORTED_MODULE_20__","components_chatPanel_ContactList_index__WEBPACK_IMPORTED_MODULE_24__","e","submitComment","event","loader","drawerState","conversationList","find","data","setTimeout","showCommunication","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","color","_this2","updatedConversation","Moment","format","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","evt","target","getAllStatus","allUsers","getAllUsers","getTokanStatus","_this$props$tokan","tokan","nextProps","incomingRoomName","_this$state2","secondary","primary","joinRoom","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_10___default","open","onClose","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_16___default","Component","settings","userReducer","chatReducer","_home_m_asif_Development_LawyersChatApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/3.89d1d0f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\"\r\n           src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;","import React from 'react';\r\nimport userImg from '../../../../assets/images/user.png'\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user._id ? 'active' : ''}`} \r\n    onClick={()=>onSelectUser(user)}\r\n    >\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={userImg} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            {/* <span className={`chat-mode smallcal ${user.status}`}/> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          {/* <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { connect } from \"react-redux\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Moment from \"moment\";\r\nimport ChatUserList from \"components/chatPanel/ChatUserList\";\r\nimport conversationList from \"../data/conversationList\";\r\nimport Conversation from \"components/chatPanel/Conversation/index\";\r\nimport users from \"../data/chatUsers\";\r\nimport ContactList from \"components/chatPanel/ContactList/index\";\r\nimport SearchBox from \"components/SearchBox/index\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport { getAllUsers } from \"../../../../actions/user\";\r\nimport { sendCall, receCall } from \"../../../../actions/chatAction\";\r\nimport Video from \"twilio-video\";\r\n\r\nclass ChatPanel extends Component {\r\n  filterContact = userName => {\r\n    if (userName === \"\") {\r\n      return users.filter(user => !user.recent);\r\n    }\r\n    return users.filter(\r\n      user =>\r\n        !user.recent &&\r\n        user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  filterUsers = userName => {\r\n    if (userName === \"\") {\r\n      return users.filter(user => user.recent);\r\n    }\r\n    return users.filter(\r\n      user =>\r\n        user.recent &&\r\n        user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n\r\n  // call functions\r\n  startCall = user => {\r\n    if (!this.state.roomName.trim()) {\r\n      this.setState({ roomNameErr: true });\r\n      return;\r\n    }\r\n\r\n    console.log(\"Joining room '\" + this.state.roomName + \"'...\");\r\n\r\n    let connectOptions = {\r\n      name: this.state.roomName\r\n    };\r\n\r\n    if (this.state.previewTracks) {\r\n      connectOptions.tracks = this.state.previewTracks;\r\n    }\r\n\r\n    // Join the Room with the token from the server and the\r\n    // LocalParticipant's Tracks.\r\n    Video.connect(this.state.token, connectOptions).then(\r\n      this.roomJoined,\r\n      this.props.sendCall(user, this.state.roomName),\r\n      error => {\r\n        alert(\"Could not connect to Twilio: \" + error.message);\r\n      }\r\n    );\r\n  };\r\n  receCall = () => {\r\n    if (!this.state.roomName.trim()) {\r\n      this.setState({ roomNameErr: true });\r\n      return;\r\n    }\r\n\r\n    console.log(\"Joining room '\" + this.state.roomName + \"'...\");\r\n\r\n    let connectOptions = {\r\n      name: this.state.roomName\r\n    };\r\n\r\n    if (this.state.previewTracks) {\r\n      connectOptions.tracks = this.state.previewTracks;\r\n    }\r\n\r\n    // Join the Room with the token from the server and the\r\n    // LocalParticipant's Tracks.\r\n    Video.connect(this.state.token, connectOptions).then(\r\n      this.roomJoined,\r\n      error => {\r\n        alert(\"Could not connect to Twilio: \" + error.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  attachTracks = (tracks, container) => {\r\n\r\n    console.log(\"================tracks====================\", tracks);\r\n    tracks.forEach(track => {\r\n      console.log(\"===================container=================\", container);\r\n      console.log(track.track);\r\n      container.appendChild(track.track.attach());\r\n    });\r\n  };\r\n\r\n  // Attaches a track to a specified DOM container\r\n  attachParticipantTracks = (participant, container) => {\r\n    console.log(\"==========participant==========================\");\r\n    console.log(participant);\r\n    var tracks = Array.from(participant.tracks.values());\r\n\r\n    console.log(\"===============tracks=====================\", tracks);\r\n    this.attachTracks(tracks, container);\r\n  };\r\n\r\n  detachTracks = tracks => {\r\n    tracks.forEach(track => {\r\n      track.track.detach().forEach(detachedElement => {\r\n        detachedElement.remove();\r\n      });\r\n    });\r\n  };\r\n\r\n  detachParticipantTracks = participant => {\r\n    var tracks = Array.from(participant.tracks.values());\r\n    this.detachTracks(tracks);\r\n  };\r\n\r\n  roomJoined = room => {\r\n    // Called when a participant joins a room\r\n    console.log(\"Joined as '\" + this.state.identity + \"'\");\r\n    this.setState({\r\n      activeRoom: room,\r\n      localMediaAvailable: true,\r\n      hasJoinedRoom: true\r\n    });\r\n\r\n    // Attach LocalParticipant's Tracks, if not already attached.\r\n    \r\n    var previewContainer = this.refs.localMedia;\r\n    console.log('=======previewContainer=============================');\r\n    console.log(previewContainer);\r\n    console.log('====================================');\r\n    if (!previewContainer.querySelector(\"video\")) {\r\n      this.attachParticipantTracks(room.localParticipant, previewContainer);\r\n    }\r\n\r\n    // Attach the Tracks of the Room's Participants.\r\n    room.participants.forEach(participant => {\r\n      console.log(\"Already in Room: '\" + participant.identity + \"'\");\r\n      var previewContainer = this.refs.remoteMedia;\r\n      this.attachParticipantTracks(participant, previewContainer);\r\n    });\r\n\r\n    // When a Participant joins the Room, log the event.\r\n    room.on(\"participantConnected\", participant => {\r\n      console.log(\"Joining: '\" + participant.identity + \"'\");\r\n    });\r\n\r\n    // When a Participant adds a Track, attach it to the DOM.\r\n    room.on(\"trackAdded\", (track, participant) => {\r\n      console.log(participant.identity + \" added track: \" + track.kind);\r\n      var previewContainer = this.refs.remoteMedia;\r\n      this.attachTracks([track], previewContainer);\r\n    });\r\n\r\n    // When a Participant removes a Track, detach it from the DOM.\r\n    room.on(\"trackRemoved\", (track, participant) => {\r\n      console.log(participant.identity + \" removed track: \" + track.kind);\r\n      this.detachTracks([track]);\r\n    });\r\n\r\n    // When a Participant leaves the Room, detach its Tracks.\r\n    room.on(\"participantDisconnected\", participant => {\r\n      console.log(\"Participant '\" + participant.identity + \"' left the room\");\r\n      this.detachParticipantTracks(participant);\r\n    });\r\n\r\n    // Once the LocalParticipant leaves the room, detach the Tracks\r\n    // of all Participants, including that of the LocalParticipant.\r\n    room.on(\"disconnected\", () => {\r\n      if (this.state.previewTracks) {\r\n        this.state.previewTracks.forEach(track => {\r\n          track.stop();\r\n        });\r\n      }\r\n      this.detachParticipantTracks(room.localParticipant);\r\n      room.participants.forEach(this.detachParticipantTracks);\r\n      this.state.activeRoom = null;\r\n      this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  leaveRoom = () => {\r\n    this.state.activeRoom.disconnect();\r\n    this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\r\n  };\r\n\r\n  // end of call code\r\n\r\n  Communication = () => {\r\n    const { incomingCall } = this.props;\r\n    const { message, selectedUser, conversation } = this.state;\r\n    // const { conversationData } = conversation;\r\n    console.log(\"selecteduser\", selectedUser);\r\n\r\n    let showLocalTrack = this.state.localMediaAvailable ? (\r\n      <div className=\"flex-item\">\r\n        <div ref=\"localMedia\" />\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n\r\n    return (\r\n      <div className=\"chat-main\">\r\n        <div className=\"chat-main-header\">\r\n          <IconButton\r\n            className=\"d-block d-xl-none chat-btn\"\r\n            aria-label=\"Menu\"\r\n            onClick={this.onToggleDrawer.bind(this)}\r\n          >\r\n            <i className=\"zmdi zmdi-comment-text\" />\r\n          </IconButton>\r\n          <div className=\"chat-main-header-info\">\r\n            <div className=\"chat-avatar mr-2\">\r\n              <div className=\"chat-avatar-mode\">\r\n                <img\r\n                  src={selectedUser.thumb}\r\n                  className=\"rounded-circle size-60\"\r\n                  alt=\"\"\r\n                />\r\n\r\n                <span className={`chat-mode ${selectedUser.status}`} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chat-contact-name\">{selectedUser.name}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <CustomScrollbars\r\n          className=\"chat-list-scroll scrollbar\"\r\n          style={{\r\n            height:\r\n              this.props.width >= 1200\r\n                ? \"calc(100vh - 300px)\"\r\n                : \"calc(100vh - 255px)\"\r\n          }}\r\n        >\r\n          <div className=\"flex-container\">\r\n            {showLocalTrack}\r\n\r\n            <div className=\"flex-item\" ref=\"remoteMedia\" id=\"remote-media\" />\r\n          </div>\r\n          {/* <Conversation\r\n            conversationData={conversationData}\r\n            selectedUser={selectedUser}\r\n          /> */}\r\n        </CustomScrollbars>\r\n\r\n        <div className=\"chat-main-footer\">\r\n          <div\r\n            className=\"d-flex flex-row align-items-center\"\r\n            style={{ maxHeight: 51 }}\r\n          >\r\n            <div className=\"col\">\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"required\"\r\n                  className=\"border-0 form-control chat-textarea\"\r\n                  onKeyUp={this._handleKeyPress.bind(this)}\r\n                  onChange={this.updateMessageValue.bind(this)}\r\n                  value={message}\r\n                  placeholder=\"Type and hit enter to send message\"\r\n                />\r\n              </div>\r\n            </div>\r\n         \r\n            <div className=\"chat-sent\">\r\n              <IconButton\r\n                // onClick={this.submitComment.bind(this)}\r\n                onClick={() => this.startCall(selectedUser)}\r\n                aria-label=\"Send message\"\r\n              >\r\n                <i className=\"zmdi  zmdi-mail-send\" />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return (\r\n      <div className=\"chat-sidenav-main\">\r\n        <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n          <div className=\"chat-user-hd mb-0\">\r\n            <IconButton\r\n              className=\"back-to-chats-button\"\r\n              aria-label=\"back button\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  userState: 1\r\n                });\r\n              }}\r\n            >\r\n              <i className=\"zmdi zmdi-arrow-back\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"chat-user chat-user-center\">\r\n            <div className=\"chat-avatar mx-auto\">\r\n              <img\r\n                src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                className=\"avatar avatar-shadow rounded-circle size-60 huge\"\r\n                alt=\"John Doe\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"user-name h4 my-2\">Robert Johnson</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-sidenav-content\">\r\n          <CustomScrollbars\r\n            className=\"chat-sidenav-scroll scrollbar\"\r\n            style={{\r\n              height:\r\n                this.props.width >= 1200\r\n                  ? \"calc(100vh - 328px)\"\r\n                  : \"calc(100vh - 162px)\"\r\n            }}\r\n          >\r\n            <form className=\"p-4\">\r\n              <div className=\"form-group mt-4\">\r\n                <label>Mood</label>\r\n\r\n                <Input\r\n                  fullWidth={true}\r\n                  id=\"exampleTextarea\"\r\n                  multiline\r\n                  rows={3}\r\n                  onKeyUp={this._handleKeyPress.bind(this)}\r\n                  onChange={this.updateMessageValue.bind(this)}\r\n                  defaultValue=\"it's a status....not your diary...\"\r\n                  placeholder=\"Status\"\r\n                  margin=\"none\"\r\n                />\r\n              </div>\r\n            </form>\r\n          </CustomScrollbars>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  ChatUsers = () => {\r\n    return (\r\n      <div className=\"chat-sidenav-main\">\r\n        <div className=\"chat-sidenav-header\">\r\n          <div className=\"chat-user-hd\">\r\n            <div\r\n              className=\"chat-avatar mr-3\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  userState: 2\r\n                });\r\n              }}\r\n            >\r\n              <div className=\"chat-avatar-mode\">\r\n                <img\r\n                  id=\"user-avatar-button\"\r\n                  src={require(\"assets/images/userAvatar/domnic-harris.jpg\")}\r\n                  className=\"rounded-circle size-50\"\r\n                  alt=\"\"\r\n                />\r\n                <span className=\"chat-mode online\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n              <div className=\"module-title\">\r\n                <h5 className=\"mb-0\">Robert Johnson</h5>\r\n              </div>\r\n              <div className=\"module-user-detail\">\r\n                <span className=\"jr-link text-grey\">robert@example.com</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"search-wrapper\">\r\n            <SearchBox\r\n              placeholder=\"Search or start new chat\"\r\n              onChange={this.updateSearchChatUser.bind(this)}\r\n              value={this.state.searchChatUser}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-sidenav-content\">\r\n          <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n            <Tabs\r\n              className=\"chat-tabs\"\r\n              value={this.state.selectedTabIndex}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n            >\r\n              <Tab label={<IntlMessages id=\"chat.chatUser\" />} />\r\n              <Tab label={<IntlMessages id=\"chat.contacts\" />} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            index={this.state.selectedTabIndex}\r\n            onChangeIndex={this.handleChangeIndex}\r\n          >\r\n            <CustomScrollbars\r\n              className=\"chat-sidenav-scroll scrollbar\"\r\n              style={{\r\n                height:\r\n                  this.props.width >= 1200\r\n                    ? \"calc(100vh - 328px)\"\r\n                    : \"calc(100vh - 202px)\"\r\n              }}\r\n            >\r\n              {this.state.chatUsers.length === 0 ? (\r\n                <div className=\"p-5\">{this.state.userNotFound}</div>\r\n              ) : (\r\n                <ChatUserList\r\n                  chatUsers={this.state.chatUsers}\r\n                  selectedSectionId={this.state.selectedSectionId}\r\n                  onSelectUser={this.onSelectUser.bind(this)}\r\n                />\r\n              )}\r\n            </CustomScrollbars>\r\n\r\n            <CustomScrollbars\r\n              className=\"chat-sidenav-scroll scrollbar\"\r\n              style={{\r\n                height:\r\n                  this.props.width >= 1200\r\n                    ? \"calc(100vh - 328px)\"\r\n                    : \"calc(100vh - 202px)\"\r\n              }}\r\n            >\r\n              {this.state.contactList.length === 0 ? (\r\n                <div className=\"p-5\">{this.state.userNotFound}</div>\r\n              ) : (\r\n                <ContactList\r\n                  contactList={this.state.contactList}\r\n                  selectedSectionId={this.state.selectedSectionId}\r\n                  onSelectUser={this.onSelectUser.bind(this)}\r\n                />\r\n              )}\r\n            </CustomScrollbars>\r\n          </SwipeableViews>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  _handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ selectedTabIndex: value });\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({ selectedTabIndex: index });\r\n  };\r\n  onSelectUser = user => {\r\n    this.setState({\r\n      loader: true,\r\n      selectedSectionId: user._id,\r\n      drawerState: this.props.drawerState,\r\n      selectedUser: user,\r\n      conversation: this.state.conversationList.find(\r\n        data => data.id === user._id\r\n      )\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ loader: false });\r\n    }, 1500);\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">\r\n          {this.state.selectedUser === null ? (\r\n            <div\r\n              className=\"loader-view\"\r\n              style={{ height: \"calc(100vh - 120px)\" }}\r\n            >\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\" />\r\n              <h1 className=\"text-muted\">\r\n                {<IntlMessages id=\"chat.selectUserChat\" />}\r\n              </h1>\r\n              <Button\r\n                className=\"d-block d-xl-none\"\r\n                color=\"primary\"\r\n                onClick={this.onToggleDrawer.bind(this)}\r\n              >\r\n                {<IntlMessages id=\"chat.selectContactChat\" />}\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            this.Communication()\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loader: false,\r\n      userNotFound: \"No user found\",\r\n      drawerState: false,\r\n      selectedSectionId: \"\",\r\n      selectedTabIndex: 0,\r\n      userState: 1,\r\n      searchChatUser: \"\",\r\n      contactList: [],\r\n      selectedUser: null,\r\n      message: \"\",\r\n      chatUsers: users.filter(user => user.recent),\r\n      conversationList: conversationList,\r\n      conversation: null,\r\n      // chat app\r\n      identity: null,\r\n      roomName: \"new room\",\r\n      roomNameErr: false, // Track error for room name TextField\r\n      previewTracks: null,\r\n      localMediaAvailable: false,\r\n      hasJoinedRoom: false,\r\n      activeRoom: \"\" // Track the current active room\r\n    };\r\n  }\r\n\r\n  submitComment() {\r\n    if (this.state.message !== \"\") {\r\n      const updatedConversation = this.state.conversation.conversationData.concat(\r\n        {\r\n          type: \"sent\",\r\n          message: this.state.message,\r\n          sentAt: Moment().format(\"hh:mm:ss A\")\r\n        }\r\n      );\r\n      this.setState({\r\n        conversation: {\r\n          ...this.state.conversation,\r\n          conversationData: updatedConversation\r\n        },\r\n        message: \"\",\r\n        conversationList: this.state.conversationList.map(conversationData => {\r\n          if (conversationData.id === this.state.conversation.id) {\r\n            return {\r\n              ...this.state.conversation,\r\n              conversationData: updatedConversation\r\n            };\r\n          } else {\r\n            return conversationData;\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMessageValue(evt) {\r\n    this.setState({\r\n      message: evt.target.value\r\n    });\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.setState({\r\n      searchChatUser: evt.target.value,\r\n      contactList: this.filterContact(evt.target.value),\r\n      chatUsers: this.filterUsers(evt.target.value)\r\n    });\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.receCall();\r\n    if (this.props.getAllStatus === \"done\") {\r\n      this.setState({\r\n        contactList: this.props.allUsers\r\n      });\r\n    } else {\r\n      this.props.getAllUsers();\r\n    }\r\n\r\n    if (this.props.getTokanStatus === \"done\") {\r\n      const { identity, token } = this.props.tokan;\r\n      this.setState({ identity, token });\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.getAllStatus === \"done\") {\r\n      this.setState({\r\n        contactList: this.props.allUsers\r\n      });\r\n    }\r\n    if (nextProps.incomingCall) {\r\n      this.setState({\r\n        roomName: nextProps.incomingRoomName\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {incomingCall} = this.props\r\n    // Only show video track after user has joined a room\r\n    let showLocalTrack = this.state.localMediaAvailable ? (\r\n      <div className=\"flex-item\">\r\n        <div ref=\"localMedia\" />\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    // Hide 'Join Room' button if user has already joined a room.\r\n    let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\r\n      <button label=\"Leave Room\" secondary={true} onClick={this.leaveRoom} />\r\n    ) : (\r\n      <button label=\"Join Room\" primary={true} onClick={this.joinRoom} />\r\n    );\r\n    const { loader, userState, drawerState } = this.state;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n            {showLocalTrack}\r\n\r\n              <Drawer\r\n                open={drawerState}\r\n                onClose={this.onToggleDrawer.bind(this)}\r\n              >\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            {incomingCall ? (\r\n              <button onClick={this.receCall}>Receive call</button>\r\n            ) : (\r\n              <p />\r\n            )}\r\n\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ? (\r\n              <div\r\n                className=\"loader-view w-100\"\r\n                style={{ height: \"calc(100vh - 120px)\" }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              this.showCommunication()\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = ({ settings }) => {\r\n//   const { width } = settings;\r\n//   return { width };\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    width: state.settings.width,\r\n    allUsers: state.userReducer.allUsers,\r\n    getAllStatus: state.userReducer.getAllStatus,\r\n    loader: state.userReducer.loader,\r\n    getTokanStatus: state.chatReducer.getTokanStatus,\r\n    tokan: state.chatReducer.tokan,\r\n    loader: state.chatReducer.loader,\r\n    incomingCall: state.chatReducer.incomingCall,\r\n    incomingRoomName: state.chatReducer.incomingRoomName\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getAllUsers, sendCall, receCall }\r\n)(ChatPanel);\r\n"],"sourceRoot":""}